import random

PAISES = {
    'Brasil': {
        'cruzador': 1,
        'torpedeiro': 2,
        'destroyer': 1,
        'couracado': 1,
        'porta-avioes': 1
    },
    'França': {
        'cruzador': 3,
        'porta-avioes': 1,
        'destroyer': 1,
        'submarino': 1,
        'couracado': 1
    },
    'Austrália': {
        'couracado': 1,
        'cruzador': 3,
        'submarino': 1,
        'porta-avioes': 1,
        'torpedeiro': 1
    },
    'Rússia': {
        'cruzador': 1,
        'porta-avioes': 1,
        'couracado': 2,
        'destroyer': 1,
        'submarino': 1
    },
    'Japão': {
        'torpedeiro': 2,
        'cruzador': 1,
        'destroyer': 2,
        'couracado': 1,
        'submarino': 1
    }
}

CORES = {
    'reset': '\u001b[0m',
    'red': '\u001b[31m',
    'black': '\u001b[30m',
    'green': '\u001b[32m',
    'yellow': '\u001b[33m',
    'blue': '\u001b[34m',
    'magenta': '\u001b[35m',
    'cyan': '\u001b[36m',
    'white': '\u001b[37m'
}

def colorir_texto(texto, cor):
    cor_codigo = CORES.get(cor.lower())
    if cor_codigo:
        return cor_codigo + texto + CORES['reset']
    else:
        return texto

def cria_mapa(n):
    return [[" "]*n for i in range(n)]

def posicao_suporta(mapa, blocos, linha, coluna, orientacao):
    if linha < 0 or coluna < 0 or linha >= len(mapa) or coluna >= len(mapa):
        return False
    if orientacao not in ['v', 'h']:
        return False
    if orientacao == 'v':
        if linha + blocos > len(mapa):
            return False
        for i in range(linha, linha + blocos):
            if mapa[i][coluna] != ' ':
                return False
    else:
        if coluna + blocos > len(mapa):
            return False
        for j in range(coluna, coluna + blocos):
            if mapa[linha][j] != ' ':
                return False
    return True

def aloca_navios(mapa, blocos):
    n = len(mapa)
    for navio in blocos:
        alocando_navio = False
        while not alocando_navio:
            linha = random.randint(0, n-1)
            coluna = random.randint(0, n-1)
            orientacao = random.choice(['h', 'v'])
            if posicao_suporta(mapa, navio, linha, coluna, orientacao):
                if orientacao == 'v':
                    for i in range(linha, linha + navio):
                        mapa[i][coluna] = 'N'
                else:
                    for j in range(coluna, coluna + navio):
                        mapa[linha][j] = 'N'
                alocando_navio = True
    return mapa

def foi_derrotado(matriz):
    for linha in matriz:
        for elem in linha:
            if elem == "N":
                return False
    return True

def print_mapa(mapa, mostrar_navios=False):
    n = len(mapa)
    print(" ", end="")
    for i in range(n):
        print(f"{i+1:2}", end=" ")
    print()
    for i in range(n):
        print(f"{chr(65 + i)} ", end="")
        for j in range(n):
            if not mostrar_navios and mapa[i][j] == 'N':
                print(" ", end=" ")
            else:
                print(mapa[i][j], end="  ")
        print()

