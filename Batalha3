import random

PAISES = {
    'Brasil': {
        'cruzador': 1,
        'torpedeiro': 2,
        'destroyer': 1,
        'couracado': 1,
        'porta-avioes': 1
    },
    'França': {
        'cruzador': 3,
        'porta-avioes': 1,
        'destroyer': 1,
        'submarino': 1,
        'couracado': 1
    },
    'Austrália': {
        'couracado': 1,
        'cruzador': 3,
        'submarino': 1,
        'porta-avioes': 1,
        'torpedeiro': 1
    },
    'Rússia': {
        'cruzador': 1,
        'porta-avioes': 1,
        'couracado': 2,
        'destroyer': 1,
        'submarino': 1
    },
    'Japão': {
        'torpedeiro': 2,
        'cruzador': 1,
        'destroyer': 2,
        'couracado': 1,
        'submarino': 1
    }
}

CORES = {
    'reset': '\u001b[0m',
    'red': '\u001b[31m',
    'black': '\u001b[30m',
    'green': '\u001b[32m',
    'yellow': '\u001b[33m',
    'blue': '\u001b[34m',
    'magenta': '\u001b[35m',
    'cyan': '\u001b[36m',
    'white': '\u001b[37m'
}

def colorir_texto(texto, cor):
    cor_codigo = CORES.get(cor.lower())
    if cor_codigo:
        return cor_codigo + texto + CORES['reset']
    else:
        return texto

def cria_mapa(n):
    return [[" "]*n for i in range(n)]

def posicao_suporta(mapa, blocos, linha, coluna, orientacao):
    if linha < 0 or coluna < 0 or linha >= len(mapa) or coluna >= len(mapa):
        return False
    if orientacao not in ['v', 'h']:
        return False
    if orientacao == 'v':
        if linha + blocos > len(mapa):
            return False
        for i in range(linha, linha + blocos):
            if mapa[i][coluna] != ' ':
                return False
    else:
        if coluna + blocos > len(mapa):
            return False
        for j in range(coluna, coluna + blocos):
            if mapa[linha][j] != ' ':
                return False
    return True

def aloca_navios(mapa, blocos):
    n = len(mapa)
    for navio in blocos:
        alocando_navio = False
        while not alocando_navio:
            linha = random.randint(0, n-1)
            coluna = random.randint(0, n-1)
            orientacao = random.choice(['h', 'v'])
            if posicao_suporta(mapa, navio, linha, coluna, orientacao):
                if orientacao == 'v':
                    for i in range(linha, linha + navio):
                        mapa[i][coluna] = 'N'
                else:
                    for j in range(coluna, coluna + navio):
                        mapa[linha][j] = 'N'
                alocando_navio = True
    return mapa

def foi_derrotado(matriz):
    for linha in matriz:
        for elem in linha:
            if elem == "N":
                return False
    return True

def print_mapa(mapa, mostrar_navios=False):
    n = len(mapa)
    print(" ", end="")
    for i in range(n):
        print(f"{i+1:2}", end=" ")
    print()
    for i in range(n):
        print(f"{chr(65 + i)} ", end="")
        for j in range(n):
            if not mostrar_navios and mapa[i][j] == 'N':
                print(" ", end=" ")
            else:
                print(mapa[i][j], end="  ")
        print()

# funcao principal

def jogo():
    print(colorir_texto("╔-------------------------------------╗","green"))
    print(colorir_texto("         <Batalha Naval Insper>        ","green"))
    print(colorir_texto("╚-------------------------------------╝","green"))
    print("Escolha uma nação: [escreva em extenso. ex:Japão]")
    print("Opções:")
    for pais in PAISES.keys():
        print("-", pais)
    nacao_jogador = input("Nação: ").strip().capitalize()

    while nacao_jogador not in PAISES:
        print("Opção inválida. Escolha outra.")
        nacao_jogador = input("Nação: ").strip().capitalize()

    blocos_jogador = list(PAISES[nacao_jogador].values())
    mapa_jogador = cria_mapa(10)

    print("Mapa do jogador:")
    print_mapa(mapa_jogador, mostrar_navios=True)

    for navio in blocos_jogador:
        while True:
            coordenada = input(f"Posição do navio {navio}: ").strip().upper()
            if len(coordenada) != 2 or not coordenada[0].isalpha() or not coordenada[1:].isdigit():
                print("Coordenada inválida. Digite novamente.")
                continue
            linha = ord(coordenada[0]) - ord('A')
            coluna = int(coordenada[1:]) - 1

            orientacao = input("Orientação do navio (h/v): ").strip().lower()
            if orientacao not in ['h', 'v']:
                print("Opção inválida. Escolha 'h' para horizontal ou 'v' para vertical.")
                continue

            if posicao_suporta(mapa_jogador, navio, linha, coluna, orientacao):
                if orientacao == 'v':
                    for i in range(linha, linha + navio):
                        mapa_jogador[i][coluna] = 'N'
                else:
                    for j in range(coluna, coluna + navio):
                        mapa_jogador[linha][j] = 'N'
                break
            else:
                print("Posição inválida. Por favor, escolha outra.")

        print("Mapa do jogador:")
        print_mapa(mapa_jogador, mostrar_navios=True)

    mapa_computador = cria_mapa(10)
    blocos_computador = list(PAISES[random.choice(list(PAISES.keys()))].values())
    aloca_navios(mapa_computador, blocos_computador)

    while True:
        print("Mapa do jogador:")
        print_mapa(mapa_jogador)
        print("\nMapa do computador:")
        print_mapa(mapa_computador)

        coordenada = input("Coordenada de ataque (ex: A1): ").strip().upper()
        if len(coordenada) != 2 or not coordenada[0].isalpha() or not coordenada[1:].isdigit():
            print("Coordenada inválida. Digite novamente.")
            continue
        linha = ord(coordenada[0]) - ord('A')
        coluna = int(coordenada[1:]) - 1

        if mapa_computador[linha][coluna] == 'N':
            mapa_computador[linha][coluna] = 'X'
            print("Você certou!")
        else:
            mapa_computador[linha][coluna] = 'O'
            print("Você errou!")

        if foi_derrotado(mapa_computador):
            print("Você venceu!")
            break

        atk_computador = random.randint(0, 9)
        atk_computador2 = random.randint(0, 9)

        if mapa_jogador[atk_computador][atk_computador2] == 'N':
            mapa_jogador[atk_computador][atk_computador2] = 'X'
            print("O computador acertou!")
        else:
            mapa_jogador[atk_computador][atk_computador2] = 'O'
            print("O computador errou!")

        if foi_derrotado(mapa_jogador):
            print("O computador venceu!")
            break

    jogar_novamente = input("Deseja jogar novamente? (s/n) ").strip().lower()
    if jogar_novamente == 's':
        jogo()

