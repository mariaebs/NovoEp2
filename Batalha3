def cria_mapa(n):
    return [[" "]*n for i in range(n)]


def posicao_suporta(mapa, blocos, linha, coluna, orientacao):
    if linha < 0 or coluna < 0 or linha >= len(mapa) or coluna >= len(mapa):
        return False
    if orientacao not in ['v', 'h']:
        return False
    if orientacao == 'v':
        if linha + blocos > len(mapa):
            return False
        for i in range(linha, linha + blocos):
            if mapa[i][coluna] != ' ':
                return False
    elif coluna + blocos > len(mapa):
        return False
    else:
        for j in range(coluna, coluna + blocos):
            if mapa[linha][j] != ' ':
                return False
    return True

def aloca_navios(mapa, blocos):
    n = len(mapa)
    for navio in blocos:
        alocando_navio = False
        while not alocando_navio:
            linha = random.randint(0, n-1)
            coluna = random.randint(0, n-1)
            orientacao = random.choice(['h', 'v'])
            if posicao_suporta(mapa, navio, linha, coluna, orientacao):
                if orientacao == 'v':
                    for i in range(linha, linha + navio):
                        mapa[i][coluna] = 'N'
                else:
                    for j in range(coluna, coluna + navio):
                        mapa[linha][j] = 'N'
                alocando_navio = True
    return mapa


def foi_derrotado (matriz):
    for linha in matriz:
        for elem in linha:
            if elem=="N":
                return False
    return True

# def print_mapa(mapa):
#     print("A B C D E F G H I J")
#     i=1
#     for i in mapa:
#         print("%d|%s|" % (i,"|".join(i)))
#         i+=1


def print_battlefield(mapa):
    # Imprime o cabe√ßalho do mapa de batalha
    print("  A   B   C   D   E   F   G   H   I   J")
    print(" " + "-" * 40)

    # Itera sobre cada linha e coluna da matriz de batalha
    for i in range(len(mapa)):
        print(f"{i + 1} " + ' | '.join(mapa[i]))

    # Imprime a linha inferior do mapa de batalha
    print(" " + "-" * 40)
    return print

mapasla= cria_mapa(10)

print(print_battlefield(mapasla))
